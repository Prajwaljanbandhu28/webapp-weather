{"ast":null,"code":"var _jsxFileName = \"/Users/Personal/Hackveda/my-stuff/wheather-app/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  base: \"https://api.openweathermap.org/data/2.5/\",\n  key: \"04e60fd3480011e71d9bebe70e77ab12\"\n};\nfunction App() {\n  _s();\n  const [search, setSearch] = useState(\"\");\n  const [weather, setWeater] = useState({});\n  const searchPressed = () => {\n    fetch(`${api.base}weather?q=${search}&APPID=${api.key}`).then(res => res.json()).then(result => {\n      console.log(result);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Wheather forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"search city/state..\",\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: searchPressed,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"City: \", weather.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"tempreture: \", weather.main.feels_like]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NUMZqMc5amFYIXFJb0L79qtswdc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","api","base","key","App","_s","search","setSearch","weather","setWeater","searchPressed","fetch","then","res","json","result","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","onClick","name","main","feels_like","_c","$RefreshReg$"],"sources":["/Users/Personal/Hackveda/my-stuff/wheather-app/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\n\nconst api = {\n  base: \"https://api.openweathermap.org/data/2.5/\",\n  key: \"04e60fd3480011e71d9bebe70e77ab12\",\n};\n\nfunction App() {\n  const [search, setSearch] = useState(\"\");\n  const [weather, setWeater] = useState({});\n\n  const searchPressed = () => {\n    fetch(`${api.base}weather?q=${search}&APPID=${api.key}`)\n      .then((res) => res.json())\n      .then((result) => {\n        console.log(result);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Wheather forecast</h1>\n\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"search city/state..\"\n          onChange={(e) => setSearch(e.target.value)}\n        />\n        <button onClick={searchPressed}>Search</button>\n      </div>\n\n      {/* {city} */}\n      <p>City: {weather.name}</p>\n      <p>tempreture: {weather.main.feels_like}</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,GAAG,GAAG;EACVC,IAAI,EAAE,0CAA0C;EAChDC,GAAG,EAAE;AACP,CAAC;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,OAAO,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEzC,MAAMY,aAAa,GAAGA,CAAA,KAAM;IAC1BC,KAAK,CAAE,GAAEV,GAAG,CAACC,IAAK,aAAYI,MAAO,UAASL,GAAG,CAACE,GAAI,EAAC,CAAC,CACrDS,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,MAAM,IAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACrB,CAAC,CAAC;EACN,CAAC;EAED,oBACEf,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA;MAAAmB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE1BvB,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QACEwB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,qBAAqB;QACjCC,QAAQ,EAAGC,CAAC,IAAKpB,SAAS,CAACoB,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eACFvB,OAAA;QAAQ8B,OAAO,EAAEpB,aAAc;QAAAS,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eAGNvB,OAAA;MAAAmB,QAAA,GAAG,QAAM,EAACX,OAAO,CAACuB,IAAI;IAAA;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BvB,OAAA;MAAAmB,QAAA,GAAG,cAAY,EAACX,OAAO,CAACwB,IAAI,CAACC,UAAU;IAAA;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV;AAAClB,EAAA,CA9BQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}